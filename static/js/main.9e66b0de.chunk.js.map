{"version":3,"sources":["components/MainTitle/MainTitle.jsx","components/SelectLift/SelectLift.jsx","components/WeightInput/WeightInput.jsx","utils/string-helpers.js","components/Slider/Slider.jsx","components/LevelSlider/LevelSlider.jsx","components/Button/Button.jsx","components/LifForm/LiftForm.jsx","components/Nav/Nav.jsx","components/Card/Card.jsx","components/FilterItems/FilterItems.jsx","containers/FilterContainer/FilterContainer.jsx","containers/LiftListContainer/LiftListContainer.jsx","components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["MainTitle","title","className","SelectLift","liftsArr","handleLiftSelect","useState","getLiftRadio","map","lift","i","type","id","name","value","onClick","e","for","WeightInput","handleWeightInput","weight","placeholder","onChange","showDifficulty","difficulty","Slider","handleDifficultyInput","bottomTitle","topTitle","setDifficulty","newLevel","setLevel","useEffect","sliderDOM","document","querySelector","console","log","classList","add","remove","class","min","max","currentDifficulty","target","currentStringDifficulty","LevelSlider","Button","handleClick","LiftForm","Nav","toggleLiftList","toggleShowForm","xmlns","width","height","viewBox","transform","x2","fill","stroke","Card","liftType","date","FilterItems","selectItems","labelCopy","htmlFor","selected","FilterContainer","filters","filterDifficulty","filtersJSX","filterItem","weightRangeJSX","weightRangeItem","selectOptions","LiftListContainer","allLiftsLogged","liftsToShow","allLiftsLoggedJSX","Home","currentLift","setCurrentLift","setAllLoggedLifts","showLiftList","setLiftList","showForm","setShowForm","isChecked","currentDate","Date","toLocaleString","split","kgInput","updatedLift","parseFloat","updateLiftsLogged","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e66b0de.chunk.js","sourcesContent":["\nimport \"./MainTitle.scss\"\n\nconst MainTitle = ({title}) => {\n    return (\n        <h3 className = \"title\">{title}</h3>\n    );\n}\n\nexport default MainTitle;","import \"./SelectLift.scss\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react/cjs/react.development\"\nconst SelectLift = ({liftsArr, handleLiftSelect}) => {\n\n    const [value, setValue] = useState(null)\n\n\nconst getLiftRadio = liftsArr.map((lift, i) => {\n    return (\n        <div>\n            <input type=\"radio\" id={lift + i} className = \"input__radio\" name=\"lift\" /*value={value}*/ value = {lift} onClick = {(e) => {handleLiftSelect(e)}}/>\n            <label for ={lift}>{lift}</label>\n        </div>\n    )\n})\nreturn ( \n    <div className=\"lift\">\n        <h4 className = \"lift__title\">Lift Type</h4>\n        <div>{getLiftRadio}</div>\n    </div>\n     );\n}\n \nexport default SelectLift;","import \"./WeightInput.scss\"\nimport {useState } from \"react\";\n\nconst WeightInput = ({handleWeightInput}) => {\nconst [weight, setWeight] = useState();\n\n    return ( \n        <div className = \"weightcontainer\">\n            <h4 className = \"weight__title\">How much did you lift?</h4>\n            <div className =\"weight__input\">\n                <input type=\"text\"   className = \"input\" placeholder=\"Enter the weight you lifted here\" value = {weight} onChange = {handleWeightInput} />\n                <h5 className = \"input__kgs\">KGs</h5>\n            </div>\n        </div>\n     );\n}\n \nexport default WeightInput;","const showDifficulty = (difficulty) => {\n    if (difficulty >= 90) {\n        return \"very hard\"\n    } else if (difficulty >= 80) {\n        return \"hard\"\n    } else if (difficulty >= 40) {\n        return\"moderate\"\n    } else if (difficulty >= 20) {\n        return \"easy\"\n    } else {\n        return \"very easy\"\n    }\n}\nexport default showDifficulty;","import { useEffect, useState } from \"react\";\nimport showDifficulty from \"../../utils/string-helpers\";\nimport \"./Slider.scss\"\nconst Slider = ({handleDifficultyInput, className, bottomTitle, topTitle }) => {\n    const[difficulty,setDifficulty] = useState(\"\")\n    const [newLevel, setLevel] = useState(\"moderate\")\n   \n    const handleInput = (e) => {\n        const currentDifficulty = e.target.value\n        setDifficulty(currentDifficulty)\n        handleDifficultyInput(currentDifficulty)\n        const currentStringDifficulty = showDifficulty(currentDifficulty)\n        setLevel(currentStringDifficulty)\n    }\n\n    useEffect(() => {\n        const sliderDOM = document.querySelector(\".slider\")\n        console.log(\"fired\")\n        if(newLevel ===\"moderate\") {\n            console.log(\"moderate\")\n            sliderDOM.classList.add(\"slider--moderate\")\n            sliderDOM.classList.remove(\"slider--easy\")\n            sliderDOM.classList.remove(\"slider--very-easy\")\n            sliderDOM.classList.remove(\"slider--hard\")\n            sliderDOM.classList.remove(\"slider--very-hard\")\n        } else if (newLevel === \"easy\") {\n            sliderDOM.classList.add(\"slider--easy\")\n            sliderDOM.classList.remove(\"slider--moderate\")\n            sliderDOM.classList.remove(\"slider--very-easy\")\n            sliderDOM.classList.remove(\"slider--hard\")\n            sliderDOM.classList.remove(\"slider--very-hard\")\n        }\n        else if (newLevel === \"easy\") {\n            sliderDOM.classList.add(\"slider--easy\")\n            sliderDOM.classList.remove(\"slider--moderate\")\n            sliderDOM.classList.remove(\"slider--very-easy\")\n            sliderDOM.classList.remove(\"slider--hard\")\n            sliderDOM.classList.remove(\"slider--very-hard\")\n        }\n    \n    \n    }, difficulty) \n\n    return (<>\n      <div class = \"slider-labels\">\n            <p class = \"slider-label\">{bottomTitle}</p>\n            <p class = \"slider-label\">{topTitle}</p>\n    </div>\n      <input className = {`slider ${className} slider--moderate`} type=\"range\" min=\"1\" max=\"100\" onChange = {handleInput}/>\n    </>);\n}\n \nexport default Slider;","\nimport \"./LevelSlider.scss\"\nimport { useState,useEffect } from \"react\";\nimport Slider from \"../Slider/Slider\";\nimport showDifficulty  from \"../../utils/string-helpers\";\n\nconst LevelSlider = ({handleDifficultyInput}) => {\n\n\n    return (\n    <div>\n        <Slider className = \"input slider__input\" min=\"1\" max=\"100\" bottomTitle=\"Very easy\" topTitle=\"Very hard\" handleDifficultyInput = {handleDifficultyInput}/>\n    </div>\n    );\n}\n \nexport default LevelSlider ","import \"./Button.scss\"\n\nconst Button = ({title, handleClick}) => {\n    return (\n    <>\n    {/* <button className=\"btn\" onClick ={handleClick}>{text}</button> */}\n    <input type=\"reset\" className=\"btn\" value = {title}onClick= {handleClick}/>\n    </> );\n}\n \nexport default Button;","import MainTitle from \"../MainTitle/MainTitle\";\nimport SelectLift from \"../SelectLift/SelectLift\";\nimport WeightInput from \"../WeightInput/WeightInput\";\nimport LevelSlider from '../LevelSlider/LevelSlider';\nimport Button from \"../Button/Button\"\nimport \"./LiftForm.scss\"\n\nconst LiftForm = ({handleLiftSelect, handleWeightInput, handleDifficultyInput, handleClick}) => {\nconst liftsArr = [\"Deadlift\", \"Squat\", \"Overhead press\", \"Bent-over row\", \"Bench press\"]\n\n\n\n\n\n    return ( \n        <>\n         <MainTitle title = \"Record Lift\" />\n        <form className = \"form\">\n        <SelectLift liftsArr = {liftsArr} handleLiftSelect  = {handleLiftSelect}/>\n        <WeightInput handleWeightInput = {handleWeightInput}/>\n        <div class=\"difficulty\">\n        <h4 className = \"difficulty__title\">How did it feel?</h4>\n        <LevelSlider handleDifficultyInput= {handleDifficultyInput}/>\n        </div>\n        <Button type= \"reset\" handleClick = {handleClick} title = {\"Add next lift\"}/>\n        </form>\n        </>\n     );\n}\n \nexport default LiftForm;","import \"./Nav.scss\";\n\nconst Nav = ({toggleLiftList, toggleShowForm}) => {\n\n    return (\n        <>\n        <nav className = \"nav\">\n            <h3 className = \"nav__logo\">Stronglift 5X5</h3>\n            <svg className = \"nav__hamburger\"xmlns=\"http://www.w3.org/2000/svg\" width=\"40.141\" height=\"28.317\" viewBox=\"0 0 40.141 28.317\">\n            <g id=\"Group_24\" data-name=\"Group 24\" transform=\"translate(-680.526 -46.699)\">\n                <g id=\"Group_19\" data-name=\"Group 19\" transform=\"translate(681.526 47.699)\">\n                <line id=\"Line_1\" data-name=\"Line 1\" x2=\"38.141\" transform=\"translate(0)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                <line id=\"Line_2\" data-name=\"Line 2\" x2=\"38.141\" transform=\"translate(0 13.385)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                <line id=\"Line_3\" data-name=\"Line 3\" x2=\"38.141\" transform=\"translate(0 26.317)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"2\"/>\n                </g>\n            </g>\n            </svg>\n            <ul className = \"nav__container\">\n            <li className = \"nav__link\" onClick = {toggleShowForm}>Add Lift</li>\n            <li className = \"nav__link\" onClick = {toggleLiftList}>Logged lifts</li>\n            </ul>\n        </nav>\n        </>\n      );\n}\n \nexport default Nav;","import \"./Card.scss\"\nconst Card = ({liftType, weight, difficulty, date}) => {\n    return ( <>\n            <div className = \"card\">\n                <h4>{liftType}</h4>\n                <p>{weight}kgs</p>\n                <p> Difficulty: {difficulty} %</p>\n                <p>On the {date}</p>\n            </div>\n            </>\n       \n     );\n}\n \nexport default Card;","import LevelSlider from \"../LevelSlider/LevelSlider\";\nimport \"./FilterItems.scss\"\nconst FilterItems = ({selectItems, labelCopy, className}) => {\n    return ( <>\n    <div className = {className}>\n        <label htmlFor={`${className}__label`}>{labelCopy}</label>\n        <select name= {className} className = {`${className}__select`}id=\"lift\">\n        <option selected value =\"Select\">Select</option>\n            {selectItems}\n        </select>\n    </div>\n    </> );\n}\n \nexport default FilterItems;","import { useState } from \"react\";\nimport FilterItems from \"../../components/FilterItems/FilterItems\";\nimport LevelSlider from \"../../components/LevelSlider/LevelSlider\";\nimport Slider from \"../../components/Slider/Slider\";\nimport \"./FilterContainer.scss\"\n\nconst FilterContainer = ({filters}) => {\nconst [filterDifficulty, setDifficultyFilter] = useState(\"\")\n\nconst filtersJSX = filters.map((filterItem, i) => {\n    return <option id = {i} className = \"lift-filter__option\" value = {`${filterItem.type}`}>{filterItem.type}</option>\n})\nconst weightRange = [\n    \"0-20\",\n    \"21-40\",\n    \"41-60\",\n    \"61-80\",\n    \"81-100\",\n    \"101-120\",\n    \"121-140\",\n    \"161-180\",\n    \">180\"\n]\nconst weightRangeJSX = weightRange.map((weightRangeItem, i ) => {\n    return <option id = {i} className = \"weight-filter__option\" value = {`${weightRangeItem}`}>{weightRangeItem} KGs</option>\n\n})\n\n    \n    return (\n    <>\n    <div className = \"filters\" selectOptions = {filtersJSX} labelCopy = \"Select lift type\">\n    <FilterItems className = \"lift-filter\" selectItems = {filtersJSX}/>\n    <FilterItems className = \"weight-filter\"selectItems = {weightRangeJSX}/>\n    <div className = \"difficulty-container\">\n    <Slider className = \"difficulty-filter\" bottomTitle =\"easy\" topTitle=\"hard\" difficulty = {filterDifficulty}/>\n    </div>\n    </div>\n    </>\n    );\n}\n \nexport default FilterContainer;","import { useState } from \"react/cjs/react.development\";\nimport \"./LiftListContainer.scss\"\nimport Card from \"../../components/Card/Card\"\nimport FilterContainer from \"../FilterContainer/FilterContainer\";\n\nconst LiftListContainer = ({allLiftsLogged, filters}) => {\n   const [liftsToShow, updateLiftsToShow] = useState(allLiftsLogged)\n    const allLiftsLoggedJSX =  liftsToShow.map(lift => {       \n     return (<>\n        <Card liftType= {lift.liftType} weight = {lift.weight} difficulty = {lift.difficulty} date = {lift.date}/>\n        </>)\n    });\n// const handeClick = () => {\n\n// }\n\n return (\n    <>\n    <FilterContainer filters = {filters} />\n    <div className = \"card-container\">\n    {allLiftsLoggedJSX}\n    </div> \n    </>\n )\n }\nexport default LiftListContainer;","import {useState, useEffect} from 'react';\nimport MainTitle from \"../MainTitle/MainTitle\";\nimport LiftForm from '../LifForm/LiftForm';\nimport Nav from '../Nav/Nav' \nimport LiftListContainer from '../../containers/LiftListContainer/LiftListContainer';\n\n\n\nconst Home = () => {\n    const filterDefault = [\n        {type: \"Deadlift\", isChecked: false, difficulty: \"\",},\n        {type: \"Squat\", isChecked: false, difficulty: \"\"},\n        {type:  \"Overhead press\", isChecked: false, difficulty: \"\"},\n        {type: \"Bent-over row\", isChecked: false, difficulty: \"\"},\n        {type: \"Bench press\", isChecked: false, difficulty: \"\"}\n    ]\n    const [newlevel, setLevel] = useState(\"moderate\")\n    const [currentLift, setCurrentLift] = useState({});\n    const [allLiftsLogged, setAllLoggedLifts] = useState([]);\n    const [showLiftList, setLiftList] = useState(false);\n    const [showForm, setShowForm] = useState(true)\n    const [filters, setFilters] = useState(filterDefault);  \n\n\n    const handleLiftSelect = (e) => {\n        console.log(\"event fires\")\n        // console.log(e)\n        const currentLift  = e.target.value;\n        const currentDate = new Date().toLocaleString().split(',')[0]\n        let newLift = {\n            liftType: currentLift,\n            weight: 0,\n            difficulty: 0,\n            date: currentDate,\n        }\n        setCurrentLift(newLift)\n    }\n\n    const handleWeightInput = (e) => {\n        const kgInput = e.target.value;\n        const updatedLift = {...currentLift}\n        parseFloat(updatedLift)\n        updatedLift.weight = kgInput\n        console.log(updatedLift)\n        setCurrentLift(updatedLift)\n    }\n\n    const handleDifficultyInput = (e) => {\n        const difficulty = e;\n        const updatedLift = {...currentLift}\n        updatedLift.difficulty = difficulty\n        console.log(updatedLift)\n        setCurrentLift(updatedLift)\n\n    }\n\n    const handleClick = (e) => {     \n        const updatedLift = {...currentLift}\n        const updateLiftsLogged = [...allLiftsLogged]\n        updateLiftsLogged.push(updatedLift)\n        console.log(updateLiftsLogged)\n        setAllLoggedLifts(updateLiftsLogged)\n        console.log(e)\n      \n    }\n    \n    useEffect(() => {\n        console.log(\"Use effect ran\")\n    },[allLiftsLogged]);\n\n\n    const toggleLiftList = () => {\n        setLiftList(!showLiftList) \n        setShowForm(!showForm)\n    }\n    const toggleShowForm = () => {\n        setShowForm(!showForm)\n        setLiftList(!showLiftList) \n    }\n\n\n        return ( \n        <>\n        <Nav toggleLiftList = {toggleLiftList} toggleShowForm = {toggleShowForm}/>\n        {showForm && <LiftForm handleLiftSelect  = {handleLiftSelect} handleWeightInput = {handleWeightInput} handleDifficultyInput= {handleDifficultyInput} handleClick = {handleClick}/>}\n        {showLiftList && < LiftListContainer allLiftsLogged = {allLiftsLogged} filters = {filters} />}\n        </>\n    );\n}\n \nexport default Home;","\nimport './App.scss';\nimport Home from \"./components/Home/Home\"\n\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">\n    <header className=\"App-header\">\n    </header>\n    <main>\n    <Home className = \"Home\"/>\n    </main>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}