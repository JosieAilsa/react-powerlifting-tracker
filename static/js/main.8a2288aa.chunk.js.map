{"version":3,"sources":["assets/images/logo-06.svg","components/Nav/Nav.jsx","components/SelectLift/SelectLift.jsx","components/WeightInput/WeightInput.jsx","assets/images/icons/lifticon-03.svg","assets/images/icons/lifticon-01.svg","assets/images/icons/lifticon-02.svg","assets/images/icons/lifticon-05.svg","assets/images/icons/lifticon-04.svg","utils/string-helpers.js","components/Slider/Slider.jsx","containers/LevelSlider/LevelSlider.jsx","components/Button/Button.jsx","pages/AddLift/AddLift.jsx","assets/images/icons/lifticon-08.svg","components/Card/Card.jsx","components/FilterItems/FilterItems.jsx","utils/filter-helpers.js","containers/FilterContainer/FilterContainer.jsx","utils/useFetch.js","containers/ErrorBoundary/ErrorBoundary.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/LoggedLifts/LoggedLifts.jsx","containers/Routes.jsx/Routing.jsx","components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","src","logo","alt","xmlns","width","height","viewBox","id","transform","x2","fill","stroke","to","SelectLift","liftsArr","handleLiftSelect","getLiftRadio","map","lift","i","type","name","value","onClick","for","WeightInput","handleWeightInput","placeholder","onChange","showDifficulty","difficulty","toInteger","parseInt","isNaN","Slider","eventHandle","bottomTitle","topTitle","diffculty","useState","newLevel","setLevel","useEffect","console","log","sliderDOM","document","querySelector","classList","add","remove","class","min","max","e","currentDifficulty","target","getNewLevel","LevelSlider","handleDifficultyInput","setDifficulty","Button","buttonText","handleSubmit","AddLift","defaultButtonText","setButtonText","setTimeout","changeButtonText","text","buttonClass","Card","liftType","weight","level","date","img","setDeleteId","cross","charAt","toUpperCase","slice","FilterItems","selectItems","labelCopy","eventHandler","htmlFor","selected","hasArrayItem","arr","item","currentCheck","find","element","indexOf","changeAllFilters","array","key","filtersJSX","isChecked","filterItem","weightRangeJSX","weightRangeItem","FilterContainer","handleDifficultySelect","handleSelectLift","handleWeightSelect","selectOptions","useFetch","url","allLifts","setAllLifts","isPending","setIsPending","isError","setIsError","fetch","then","res","ok","Error","json","data","catch","err","message","ErrorBoundary","props","state","error","this","role","style","whiteSpace","children","React","Component","ErrorMessage","LoggedLifts","filterDefault","liftsToShow","setLiftsToShow","currentFilter","setFilter","deleteId","length","method","curr","def","Array","isArray","every","index","Object","keys","checkArraysAreEqual","newLiftsToShow","currentLift","obj","filter","currentWeight","input","findWeightRange","cardJSX","imageURL","toLowerCase","squat","overHeadPress","benchPress","bentOverRow","deadlift","getImage","toString","difficultyInput","indexValue","updateFilter","weightSelect","weightInput","Routing","path","Home","setCurrentLift","currentDate","Date","toLocaleString","split","kgInput","updatedLift","parseFloat","headers","body","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a2288aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-06.a2a337b9.svg\";","import \"./Nav.scss\";\nimport logo from \"../../assets/images/logo-06.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav className=\"nav\">\n      <img className=\"nav__logo\" src={logo} alt=\"logo\" />\n      <svg\n        className=\"nav__hamburger\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"40.141\"\n        height=\"28.317\"\n        viewBox=\"0 0 40.141 28.317\"\n      >\n        <g\n          id=\"Group_24\"\n          data-name=\"Group 24\"\n          transform=\"translate(-680.526 -46.699)\"\n        >\n          <g\n            id=\"Group_19\"\n            data-name=\"Group 19\"\n            transform=\"translate(681.526 47.699)\"\n          >\n            <line\n              id=\"Line_1\"\n              data-name=\"Line 1\"\n              x2=\"38.141\"\n              transform=\"translate(0)\"\n              fill=\"none\"\n              stroke=\"#fff\"\n              stroke-linecap=\"round\"\n              stroke-width=\"2\"\n            />\n            <line\n              id=\"Line_2\"\n              data-name=\"Line 2\"\n              x2=\"38.141\"\n              transform=\"translate(0 13.385)\"\n              fill=\"none\"\n              stroke=\"#fff\"\n              stroke-linecap=\"round\"\n              stroke-width=\"2\"\n            />\n            <line\n              id=\"Line_3\"\n              data-name=\"Line 3\"\n              x2=\"38.141\"\n              transform=\"translate(0 26.317)\"\n              fill=\"none\"\n              stroke=\"#fff\"\n              stroke-linecap=\"round\"\n              stroke-width=\"2\"\n            />\n          </g>\n        </g>\n      </svg>\n      <ul className=\"nav__container\">\n        <li className=\"nav__link\">\n          <Link to= \"/\">Add Lift</Link>\n        </li>\n        <li className=\"nav__link\">\n          <Link to=\"/lifts\">Logged lifts</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import \"./SelectLift.scss\";\nconst SelectLift = ({ liftsArr, handleLiftSelect }) => {\n\n  const getLiftRadio = liftsArr.map((lift, i) => {\n    return (\n      <div className=\"radio\">\n        <input\n          type=\"radio\"\n          id={lift + i}\n          className=\"radio__input\"\n          name=\"lift\"\n          value={lift}\n          onClick={handleLiftSelect}\n        />\n        <label className = \"radio__label\" for={lift}>{lift}</label>\n      </div>\n    );\n  });\n  return (\n    <div className=\"lift\">\n      <h4 className=\"lift__title\">Lift Type</h4>\n      <div className=\"lift__list\">{getLiftRadio}</div>\n    </div>\n  );\n};\n\nexport default SelectLift;\n","import \"./WeightInput.scss\";\n\nconst WeightInput = ({ handleWeightInput }) => {\n\n  return (\n    <div className=\"weightcontainer\">\n      <h4 className=\"weight__title\">How much did you lift?</h4>\n      <div className=\"weight__input\">\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Enter the weight you lifted here\"\n          value={null}\n          onChange={handleWeightInput}\n        />\n        <h5 className=\"input__kgs\">KGs</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default WeightInput;\n","export default __webpack_public_path__ + \"static/media/lifticon-03.278b0d0a.svg\";","export default __webpack_public_path__ + \"static/media/lifticon-01.ec0dab58.svg\";","export default __webpack_public_path__ + \"static/media/lifticon-02.5b630054.svg\";","export default __webpack_public_path__ + \"static/media/lifticon-05.da25b0c7.svg\";","export default __webpack_public_path__ + \"static/media/lifticon-04.310f2c3b.svg\";","import squat from \"../assets/images/icons/lifticon-03.svg\";\nimport overHeadPress from \"../assets/images/icons/lifticon-01.svg\";\nimport bentOverRow from \"../assets/images/icons/lifticon-02.svg\";\nimport deadlift from \"../assets/images/icons/lifticon-05.svg\";\nimport benchPress from \"../assets/images/icons/lifticon-04.svg\";\n\nexport const showDifficulty = (difficulty) => {\n  const toInteger = parseInt(difficulty);\n  if (isNaN(toInteger)) {\n    return undefined;\n  }\n  if (toInteger >= 90) {\n    return \"very hard\";\n  } else if (toInteger < 90 && toInteger >= 60) {\n    return \"hard\";\n  } else if (toInteger < 60 && toInteger >= 30) {\n    return \"moderate\";\n  } else if (toInteger < 30 && toInteger > 10) {\n    return \"easy\";\n  }\n  return \"very easy\";\n};\n\nexport const getImage = (liftType) => {\n  const lift = liftType.toLowerCase();\n  if (lift === \"squat\") {\n    return squat;\n  } else if (lift === \"overhead press\") {\n    return overHeadPress;\n  } else if (lift === \"bench press\") {\n    return benchPress;\n  } else if (lift === \"bent-over row\") {\n    return bentOverRow;\n  }\n  return deadlift;\n};\n","import { useEffect, useState } from \"react\";\nimport { showDifficulty } from \"../../utils/string-helpers\";\nimport \"./Slider.scss\";\nconst Slider = ({\n  eventHandle,\n  className,\n  bottomTitle,\n  topTitle,\n  diffculty,\n}) => {\n  const [newLevel, setLevel] = useState(\"moderate\");\n\n  const handInputUpdateComponentState = (e) => {\n    const currentDifficulty = e.target.value;\n    eventHandle(currentDifficulty);\n    const getNewLevel = showDifficulty(currentDifficulty);\n    setLevel(getNewLevel);\n  };\n\n  useEffect(() => {\n    console.log(newLevel);\n    const sliderDOM = document.querySelector(\".slider\");\n    if (newLevel === \"very easy\") {\n      sliderDOM.classList.add(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--easy\");\n      sliderDOM.classList.remove(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--very-hard\");\n    } else if (newLevel === \"easy\") {\n      sliderDOM.classList.add(\"slider--easy\");\n      sliderDOM.classList.remove(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--very-hard\");\n    } else if (newLevel === \"moderate\") {\n      sliderDOM.classList.add(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--easy\");\n      sliderDOM.classList.remove(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--very-hard\");\n    } else if (newLevel === \"hard\") {\n      sliderDOM.classList.add(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--easy\");\n      sliderDOM.classList.remove(\"slider--very-hard\");\n    } else if (newLevel === \"very hard\") {\n      sliderDOM.classList.add(\"slider--very-hard\");\n      sliderDOM.classList.remove(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--easy\");\n    }\n  }, [newLevel]);\n\n  return (\n    <div>\n      <div class=\"slider__labels\">\n        <p>{bottomTitle}</p>\n        <p>{topTitle}</p>\n      </div>\n      <input\n        className={`slider ${className}`}\n        value={diffculty}\n        type=\"range\"\n        min=\"1\"\n        max=\"100\"\n        onChange={handInputUpdateComponentState}\n      />\n    </div>\n  );\n};\n\nexport default Slider;\n","import \"./LevelSlider.scss\";\nimport { useState} from \"react\";\nimport Slider from \"../../components/Slider/Slider\"\nimport {showDifficulty } from \"../../utils/string-helpers\"\n\nconst LevelSlider = ({ handleDifficultyInput }) => {\n  const [difficulty, setDifficulty] = useState(\"\");\n\n  const handleInput = (e) => {\n    setDifficulty(e);\n    handleDifficultyInput(e);\n  };\n\n  return (\n    <div>\n      <Slider\n        className=\"input slider__input\"\n        bottomTitle=\"Very easy\"\n        topTitle=\"Very hard\"\n        difficulty={difficulty}\n        eventHandle={handleInput}\n      />\n      <p className = \"slider__description\">It felt: {showDifficulty(difficulty)}!</p>\n    </div>\n    \n  );\n};\n\nexport default LevelSlider;\n","import \"./Button.scss\";\n\nconst Button = ({buttonText, handleSubmit, className}) => {\n  return (\n    <>\n      <button className = {`btn ${className}`} type=\"reset\" onClick={handleSubmit}>{buttonText}</button>\n    </>\n  );\n};\n\nexport default Button;\n","import SelectLift from \"../../components/SelectLift/SelectLift\";\nimport WeightInput from \"../../components/WeightInput/WeightInput\";\nimport LevelSlider from \"../../containers/LevelSlider/LevelSlider\";\nimport Button from \"../../components/Button/Button\";\nimport \"./AddLift.scss\";\nimport { useEffect, useState } from \"react\";\n\nconst AddLift = ({\n  handleLiftSelect,\n  handleWeightInput,\n  handleDifficultyInput,\n  handleSubmit,\n}) => {\n  const liftsArr = [\n    \"Deadlift\",\n    \"Squat\",\n    \"Overhead press\",\n    \"Bent-over row\",\n    \"Bench press\",\n  ];\n  const defaultButtonText = \"Add Lift\"\n  const [buttonText, setButtonText] = useState(defaultButtonText); \n\n  const handleButtonClick = () => {\n    handleSubmit()\n    changeButtonText(\"Added!\")\n  }\n  \n  useEffect(() => {\n   if (buttonText !== defaultButtonText) {\n     setTimeout(() => setButtonText(defaultButtonText),[1000])\n   }\n  }, [buttonText])\n\n  const changeButtonText = (text) => setButtonText(text)\n\n  return (\n    <form className=\"form\">\n      <h3 className=\"title\">Record Lift</h3>\n      <SelectLift liftsArr={liftsArr} handleLiftSelect={handleLiftSelect} />\n      <WeightInput handleWeightInput={handleWeightInput} />\n      <div class=\"difficulty\">\n        <h4 className=\"difficulty__title\">How did it feel?</h4>\n        <span>Move the level slider to set the difficulty</span>\n        <LevelSlider handleDifficultyInput={handleDifficultyInput} />\n      </div>\n      <Button  buttonClass = \"submit\" type=\"submit\" buttonText= {buttonText} handleSubmit = {handleButtonClick}/>\n    </form>\n  );\n};\n\nexport default AddLift;\n","export default __webpack_public_path__ + \"static/media/lifticon-08.73212f89.svg\";","import \"./Card.scss\";\nimport cross from \"../../assets/images/icons/lifticon-08.svg\"\nconst Card = ({id, liftType, weight, difficulty, level, date, img, setDeleteId}) => {\n  return (\n    <div className=\"card\">\n      <button className=\"delete-button\" onClick = {() => {setDeleteId(id)}}>\n        <img src={cross} className=\"delete-button__icon\" alt=\"delete lift\" />\n      </button>\n      <h4 className=\"card__title\">{liftType}</h4>\n      <img src={img} className=\"card__icon\" alt={liftType}></img>\n      <div className=\"card__text\">\n        <p className=\"card__info\">Weight:</p>\n        <p className=\"card__info\">{weight}kgs</p>\n        <p className=\"card__info\">Exertion:</p>\n        <p className=\"card__info\">\n          {level.charAt(0).toUpperCase() + level.slice(1)} ({difficulty})%\n        </p>\n        <p className=\"card__info\">Completed:</p>\n        <p className=\"card__info\">{date}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import \"./FilterItems.scss\";\nconst FilterItems = ({ selectItems, labelCopy, className, eventHandler }) => {\n  return (\n    <>\n      <div className={`${{ className }} filter`}>\n        <label htmlFor={`${className}__label filter__select`}>\n          {labelCopy}:\n        </label>\n        <select\n          name={className}\n          className={`${className}__select`}\n          id=\"lift\"\n          onChange={eventHandler}\n        >\n          <option selected value=\"Reset\">\n            Select\n          </option>\n          {selectItems}\n        </select>\n      </div>\n    </>\n  );\n};\n\nexport default FilterItems;\n","export const findWeightRange = (input) => {\n  const toInteger = parseInt(input);\n  if (toInteger > 180) {\n    return \">180\";\n  } else if (toInteger > 161 && toInteger <= 180) {\n    return \"161-180\";\n  } else if (toInteger > 121 && toInteger <= 140) {\n    return \"121-140\";\n  } else if (toInteger > 101 && toInteger <= 120) {\n    return \"121-140\";\n  } else if (toInteger > 81 && toInteger <= 100) {\n    return \"81-100\";\n  } else if (toInteger > 61 && toInteger <= 80) {\n    return \"61-80\";\n  } else if (toInteger > 41 && toInteger <= 60) {\n    return \"41-60\";\n  } else if (toInteger > 21 && toInteger <= 40) {\n    return \"21-40\";\n  } else if (toInteger < 21 && toInteger <= 40) {\n    return \"0-20\";\n  }\n};\n\nexport const hasArrayItem = (arr, item) => {\n  const currentCheck = arr.find((element) => element.item);\n  const indexValue = arr.indexOf(currentCheck);\n\n  // return indexValue > -1;\n  if (indexValue > -1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const checkArraysAreEqual = (curr, def) => {\n  if (!(Array.isArray(curr) && Array.isArray(def))) {\n    throw new Error(\"No valid array provided\");\n  }\n  // Check if the current filter is the default\n  const isDefault = curr.every((item, index) => {\n    const keyValues = Object.keys(item);\n    const isMatch = keyValues.every((key) => item[key] === def[index][key]);\n    if (isMatch) {\n      //return true if the two arrays are the same\n      return true;\n    }\n    return false;\n  });\n  return isDefault;\n};\n\nexport const changeAllFilters = (array, key, value) => {\n  const newArr = array.map((item) => {\n    item[key] = value;\n    return item;\n  });\n  return newArr;\n};\n\nconst filterDefault = [\n  {\n    liftType: \"Deadlift\",\n    isChecked: false,\n    weight: \"\",\n    difficulty: \"\",\n    level: \"\",\n  },\n  {\n    liftType: \"Squat\",\n    isChecked: false,\n    weight: \"\",\n    difficulty: \"\",\n    level: \"\",\n  },\n  {\n    liftType: \"Overhead press\",\n    isChecked: false,\n    weight: \"\",\n    difficulty: \"\",\n    level: \"\",\n  },\n  {\n    liftType: \"Bent-over row\",\n    isChecked: false,\n    weight: \"\",\n    difficulty: \"\",\n    level: \"\",\n  },\n  {\n    liftType: \"Bench press\",\n    isChecked: false,\n    weight: \"\",\n    difficulty: \"\",\n    level: \"\",\n  },\n];\n\nexport const filtersJSX = filterDefault.map((filterItem, i) => {\n  return (\n    <option\n      id={i}\n      className=\"lift-filter__option\"\n      value={`${filterItem.liftType}`}\n    >\n      {filterItem.liftType}\n    </option>\n  );\n});\n\nexport const weightRange = [\n  \"0-20\",\n  \"21-40\",\n  \"41-60\",\n  \"61-80\",\n  \"81-100\",\n  \"101-120\",\n  \"121-140\",\n  \"161-180\",\n  \">180\",\n];\n\nexport const weightRangeJSX = weightRange.map((weightRangeItem, i) => {\n  return (\n    <option\n      id={i}\n      className=\"weight-filter__option\"\n      value={`${weightRangeItem}`}\n    >\n      {weightRangeItem} KGs\n    </option>\n  );\n});\n\n\n","import FilterItems from \"../../components/FilterItems/FilterItems\";\nimport Slider from \"../../components/Slider/Slider\";\nimport \"./FilterContainer.scss\";\nimport {filtersJSX, weightRangeJSX} from \"../../utils/filter-helpers\"\n\nconst FilterContainer = ({\n  handleDifficultySelect,\n  handleSelectLift,\n  handleWeightSelect\n}) => {\n  return (\n    <>\n      <div className=\"filters\" selectOptions={filtersJSX}>\n        <FilterItems\n          className=\"lift-filter\"\n          selectItems={filtersJSX}\n          eventHandler={handleSelectLift}\n          labelCopy=\"Select lift type\"\n        />\n        <FilterItems\n          className=\"weight-filter\"\n          selectItems={weightRangeJSX}\n          eventHandler={handleWeightSelect}\n          labelCopy=\"Select weight range\"\n        />\n        <div className=\"difficulty-container\">\n          <Slider\n            className=\"difficulty-filter\"\n            bottomTitle=\"Very easy\"\n            topTitle=\"Very hard\"\n            eventHandle={handleDifficultySelect}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FilterContainer;\n","import { useState, useEffect } from \"react\";\n\n\nconst useFetch = (url) => {\n    //State to check if we have the data retrieved from API or not\n    const [allLifts, setAllLifts] = useState ([])\n    //State to tell us if the fetch is pending in order to show loading \n    const [isPending, setIsPending] = useState(true)\n    //State to check if there is an error \n    const [isError, setIsError]= useState(null)\n\n        useEffect(() => {\n            fetch(url)\n                .then(res => {\n                    if(!res.ok) {\n                        throw Error (\"Could not fetch\")\n                    }\n                    console.log(res)\n                    return res.json()\n                })\n                    .then((data) => {\n                        setAllLifts(data)\n                        setIsError(null)\n                        setIsPending(false)\n                    })\n                    .catch(err => {\n                        console.log(err.message)\n                        setIsPending(false)\n                        setIsError(err.message)\n                    })\n            }, [url])\n   \n    return {allLifts,isPending,isError, setAllLifts}\n}\n \nexport default useFetch;","import React from \"react\"\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { error: null };\n      }\n    static getDerivedStateFromError(error) {\n      return {error}\n    }\n    render() {\n      const {error} = this.state\n      if(error){\n        return (<div role=\"alert\">\n        There was an error:{' '}\n        <pre style={{whiteSpace: 'normal'}}>{error.message}</pre>\n        </div>)\n      }\n      console.log('ErrorBoundary', this.state.error)\n      return this.props.children\n    }\n  }\n\n  export default ErrorBoundary;","import \"./ErrorMessage.scss\"\nconst ErrorMessage = () => {\n    return ( \n        <section className=\"error-message\">\n            <div className=\"error-message__text\">\n            <h3 className=\"error-message__title\"> 😬 Whoops this is embarrassing 😬 </h3>\n            <p className=\"error-message__text\">My google cloud subscription for my API and database hosting has expired so you can longer see these lifts.</p>\n            </div>\n        </section>\n    );\n}\n \nexport default ErrorMessage;","import { useState } from \"react/cjs/react.development\";\nimport \"./LoggedLifts.scss\";\nimport Card from \"../../components/Card/Card\";\nimport FilterContainer from \"../../containers/FilterContainer/FilterContainer\";\nimport { showDifficulty, getImage } from \"../../utils/string-helpers\";\nimport { useEffect } from \"react\";\nimport {\n  checkArraysAreEqual,\n  findWeightRange,\n  hasArrayItem,\n  changeAllFilters,\n} from \"../../utils/filter-helpers\";\nimport useFetch from \"../../utils/useFetch\";\nimport ErrorBoundary from \"../../containers/ErrorBoundary/ErrorBoundary\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\n\nconst LoggedLifts = () => {\n  const filterDefault = [\n    {\n      liftType: \"Deadlift\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n    {\n      liftType: \"Squat\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n    {\n      liftType: \"Overhead press\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n    {\n      liftType: \"Bent-over row\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n    {\n      liftType: \"Bench press\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n  ];\n  // Set state for lifts to show and filters\n  const [liftsToShow, setLiftsToShow] = useState([]);\n  const [currentFilter, setFilter] = useState([...filterDefault]);  \n  const  [deleteId, setDeleteId] = useState(null)\n  const {allLifts, isPending, isError} = useFetch(\"https://instant-run-338811.nw.r.appspot.com/lifts/all\")\n  \n  const handleSelectLift = (e) => {\n    const weightSelect = e.target.value;\n    // 1. Reset all filters to false\n    const updateFilter = changeAllFilters(currentFilter, \"isChecked\", false);\n    setFilter(updateFilter);\n    //2. Return if the filter is set to default\n    if (weightSelect === \"Reset\") {\n    return;\n    }\n    // 2. Find the corresponding filter, and update isChecked to be true\n    // currentFilter.map(f => {\n    //   console.log(f)\n    //   if (f.liftType == weightSelect) f.isChecked = true;\n    //   console.log(f)\n    // })\n    return setFilter([...currentFilter])\n  };\n  \n  //Weight range filter\n  const handleWeightSelect = (e) => {\n    const weightInput = e.target.value;\n    if (weightInput === \"Reset\") {\n      const updateFilter = changeAllFilters(currentFilter, \"weight\", \"\");\n      setFilter(updateFilter);\n      return;\n    }\n    const indexValue = hasArrayItem(currentFilter, weightInput);\n    if (indexValue) {\n      const updateFilter = [...currentFilter];\n      updateFilter[indexValue].weight = weightInput;\n      setFilter(updateFilter);\n    } else {\n      const updateFilter = changeAllFilters(\n        currentFilter,\n        \"weight\",\n        weightInput\n      );\n      setFilter(updateFilter);\n    }\n  };\n  //Difficulty slider\n  const handleDifficultySelect = (e) => {\n    const difficultyInput = e;\n    const indexValue = hasArrayItem(currentFilter, difficultyInput);\n    if (indexValue) {\n      const updateFilter = [...currentFilter];\n      updateFilter[indexValue].difficulty = difficultyInput;\n      updateFilter[indexValue].level = showDifficulty(e);\n      setFilter(updateFilter);\n      console.log(currentFilter);\n    } else {\n      const updateFilter = currentFilter.map((item) => {\n        item.difficulty = difficultyInput;\n        item.level = showDifficulty(difficultyInput);\n        return item;\n      });\n      setFilter(updateFilter);\n      console.log(currentFilter);\n    }\n  };\n\n//Updates the lift to show once the fetch has complte \n  useEffect(() => {\n    if(!allLifts || allLifts.length > 0) return \n    setLiftsToShow([...allLifts])\n  }, [allLifts]);\n  \n  //Deletes an entry one the delet button is pressed \n  // get rid of useEffect\n  useEffect(() => {\n  if(!deleteId) {\n    return \n  }\n  fetch(`https://instant-run-338811.nw.r.appspot.com/lifts/${deleteId}`, { \n  method: 'DELETE',\n    })\n    .then((res) => {\n      if(!res.ok) throw Error (\"Could not fetch\")\n      return res.json()\n    })\n    .catch(err => console.log(err));\n    // window.location.reload;\n    \n},\n [deleteId])\n\n\n//Watches for any changes to the state of the filter array and filters all the lists returned from the fetch \n  useEffect(() => {\n    //1. If fetch has not performed return \n    if (isPending){\n      return \n    }\n    //2. Guard check if the filters have nothing selected =\n    const isDefault = checkArraysAreEqual(currentFilter, filterDefault);\n    //1. Check if the default filters are applied and set to all lifts if possible... \n    if (isDefault) {\n      return setLiftsToShow([...allLifts]);\n    }\n    //Copy all the lifts currently shown\n    let newLiftsToShow = [...allLifts];\n    //Find it there is a specific lift checked for first filter\n    let currentLift = currentFilter.find((obj) => obj.isChecked);\n    //If there is one checked, filter the list to show just that lift\n    if (currentLift) {\n      newLiftsToShow = allLifts.filter(\n        (item) => item.liftType === currentLift.liftType\n      );\n    }\n    //Now, in the same way, check the copy of allLifts to see if weight is checked\n    let currentWeight = currentFilter.find((obj) => obj.weight);\n    if (currentWeight) {\n      newLiftsToShow = newLiftsToShow.filter((item) => {\n        const weightRange = findWeightRange(item.weight);\n        if (weightRange === currentWeight.weight) return true;\n        return false;\n      });\n      console.log(newLiftsToShow);\n    }\n    //Find if difficulty input\n    let currentDifficulty = currentFilter.find((obj) => obj.level);\n    if (currentDifficulty) {\n      //Filter from the original total lifts array to set back to new search each time\n      newLiftsToShow = newLiftsToShow.filter(\n        (item) => item.level === currentDifficulty.level\n      );\n    }\n    setLiftsToShow(newLiftsToShow); \n    return;\n    // eslint-disable-next-line\n  }, [currentFilter]);\n\n    const cardJSX = liftsToShow.map(lift => {\n      const imageURL = getImage(lift.liftType);\n      return (\n        <>\n          <Card \n            key = {lift.id.toString}\n            id = {lift.id}\n            liftType={lift.liftType}\n            weight={lift.weight}\n            difficulty={lift.difficulty}\n            date={lift.date}\n            level={lift.level}\n            img={imageURL}\n            setDeleteId = {setDeleteId}\n          />\n        </>\n      );\n    });\n    \n\n  return (\n  <ErrorBoundary>\n     {isPending && <h3>Loading...</h3>}\n     {isError && <ErrorMessage/>}\n     {!isPending && \n        <>\n          <FilterContainer\n            handleDifficultySelect={handleDifficultySelect}\n            handleSelectLift={handleSelectLift}\n            handleWeightSelect={handleWeightSelect}\n          />\n          <div className=\"card-container\">{cardJSX}</div>\n         </>\n}\n  </ErrorBoundary>\n  );\n};\nexport default LoggedLifts;\n","import AddLift from \"../../pages/AddLift/AddLift\";\nimport LoggedLifts from \"../../pages/LoggedLifts/LoggedLifts\"\nimport { Routes, Route } from \"react-router-dom\";\n\nconst Routing = ({handleLiftSelect, handleWeightInput, handleDifficultyInput, handleSubmit}) => {\n    return (\n        <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <AddLift\n                handleLiftSelect={handleLiftSelect}\n                handleWeightInput={handleWeightInput}\n                handleDifficultyInput={handleDifficultyInput}\n                handleSubmit={handleSubmit}\n            />\n          }\n        />\n        <Route\n          path= \"/lifts\"\n          element={\n                <LoggedLifts/>}\n        />\n      </Routes> \n    );\n}\n \nexport default Routing;","import { useState } from \"react\";\nimport Nav from \"../Nav/Nav\";\nimport Routing from \"../../containers/Routes.jsx/Routing\";\n\nimport { showDifficulty } from \"../../utils/string-helpers\";\n\nconst Home = () => {\n  const [currentLift, setCurrentLift] = useState({});\n \n  const handleLiftSelect = (e) => {\n    const currentLift = e.target.value;\n    const currentDate = new Date().toLocaleString().split(\",\")[0];\n    let newLift = {\n      liftType: currentLift,\n      weight: 0,\n      difficulty: 0,\n      date: currentDate,\n    };\n    setCurrentLift(newLift);\n  };\n\n  const handleWeightInput = (e) => {\n    const kgInput = e.target.value;\n    const updatedLift = { ...currentLift };\n    parseFloat(updatedLift);\n    updatedLift.weight = kgInput;\n    setCurrentLift(updatedLift);\n  };\n\n  const handleDifficultyInput = (e) => {\n    const difficulty = e;\n    const updatedLift = { ...currentLift };\n    updatedLift.difficulty = difficulty;\n    updatedLift.level = showDifficulty(difficulty);\n    setCurrentLift(updatedLift);\n  };\n\n  const handleSubmit = () => {\n    const updatedLift = { ...currentLift };\n    setCurrentLift(updatedLift)\n    console.log(currentLift)\n    fetch(\"https://instant-run-338811.nw.r.appspot.com/lifts/create\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(currentLift)\n    })\n    .then((res) => {\n      if(!res.ok)throw Error (\"Could not fetch\")\n      return res.json()\n    })\n    .then((json => console.log(json)))\n    .catch(err => console.log(err));\n};\n\n  return (\n    <>\n      <Nav />\n        <Routing \n          handleLiftSelect={handleLiftSelect}\n          handleWeightInput={handleWeightInput}\n          handleDifficultyInput={handleDifficultyInput}\n          handleSubmit={handleSubmit}\n        />\n    </>\n  );\n};\n\nexport default Home;\n","import \"./App.scss\";\nimport Home from \"./components/Home/Home\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <main>\n          <Home className=\"Home\" />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {HashRouter} from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}