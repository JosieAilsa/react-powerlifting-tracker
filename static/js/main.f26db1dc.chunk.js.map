{"version":3,"sources":["assets/images/logo-06.svg","components/Nav/Nav.jsx","components/SelectLift/SelectLift.jsx","components/WeightInput/WeightInput.jsx","assets/images/icons/lifticon-03.svg","assets/images/icons/lifticon-01.svg","assets/images/icons/lifticon-04.svg","assets/images/icons/lifticon-02.svg","assets/images/icons/lifticon-05.svg","utils/string-helpers.js","components/Slider/Slider.jsx","components/LevelSlider/LevelSlider.jsx","components/Button/Button.jsx","containers/LifForm/LiftForm.jsx","components/Card/Card.jsx","components/FilterItems/FilterItems.jsx","containers/FilterContainer/FilterContainer.jsx","utils/filter-helpers.js","containers/LiftListContainer/LiftListContainer.jsx","components/Routes.jsx/Routing.jsx","components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","src","logo","alt","xmlns","width","height","viewBox","id","transform","x2","fill","stroke","to","SelectLift","liftsArr","handleLiftSelect","useState","getLiftRadio","map","lift","i","type","name","value","onClick","for","WeightInput","handleWeightInput","weight","placeholder","onChange","showDifficulty","difficulty","toInteger","parseInt","isNaN","Slider","eventHandle","bottomTitle","topTitle","diffculty","newLevel","setLevel","useEffect","console","log","sliderDOM","document","querySelector","classList","add","remove","class","min","max","e","currentDifficulty","target","getNewLevel","LevelSlider","handleDifficultyInput","setDifficulty","Button","title","handleClick","LiftForm","Card","liftType","level","date","img","charAt","toUpperCase","slice","FilterItems","selectItems","labelCopy","eventHandler","htmlFor","selected","FilterContainer","handleDifficultySelect","handleSelectLift","handleWeightSelect","filtersJSX","weightRangeJSX","selectOptions","checkIfLiftSelect","arr","item","currentCheck","find","element","indexValue","indexOf","changeAllFilters","array","key","LiftListContainer","allLiftsLogged","filterDefault","isChecked","liftsToShow","updateLiftsToShow","currentFilter","setFilter","curr","def","Array","isArray","Error","every","index","Object","keys","checkIsDefaultFilter","newLiftsToShow","currentLift","obj","filter","currentWeight","input","findWeightRange","allLiftsLoggedJSX","imageURL","toLowerCase","squat","overHeadPress","benchPress","bentOverRow","deadlift","getImage","filterItem","weightRangeItem","difficultyInput","updateFilter","weightSelect","findIndex","weightInput","Routing","path","Home","setCurrentLift","setAllLoggedLifts","currentDate","Date","toLocaleString","split","kgInput","updatedLift","parseFloat","updateLiftsLogged","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f26db1dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-06.9332d655.svg\";","import \"./Nav.scss\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../assets/images/logo-06.svg\";\n\nconst Nav = () => {\n  return (\n    <nav className=\"nav\">\n      <img className=\"nav__logo\" src={logo} alt=\"logo\" />\n      <svg\n        className=\"nav__hamburger\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"40.141\"\n        height=\"28.317\"\n        viewBox=\"0 0 40.141 28.317\"\n      >\n        <g\n          id=\"Group_24\"\n          data-name=\"Group 24\"\n          transform=\"translate(-680.526 -46.699)\"\n        >\n          <g\n            id=\"Group_19\"\n            data-name=\"Group 19\"\n            transform=\"translate(681.526 47.699)\"\n          >\n            <line\n              id=\"Line_1\"\n              data-name=\"Line 1\"\n              x2=\"38.141\"\n              transform=\"translate(0)\"\n              fill=\"none\"\n              stroke=\"#fff\"\n              stroke-linecap=\"round\"\n              stroke-width=\"2\"\n            />\n            <line\n              id=\"Line_2\"\n              data-name=\"Line 2\"\n              x2=\"38.141\"\n              transform=\"translate(0 13.385)\"\n              fill=\"none\"\n              stroke=\"#fff\"\n              stroke-linecap=\"round\"\n              stroke-width=\"2\"\n            />\n            <line\n              id=\"Line_3\"\n              data-name=\"Line 3\"\n              x2=\"38.141\"\n              transform=\"translate(0 26.317)\"\n              fill=\"none\"\n              stroke=\"#fff\"\n              stroke-linecap=\"round\"\n              stroke-width=\"2\"\n            />\n          </g>\n        </g>\n      </svg>\n      <ul className=\"nav__container\">\n        <li className=\"nav__link\">\n          <Link to= \"/lift/create\">Add Lift</Link>\n        </li>\n        <li className=\"nav__link\">\n          <Link to=\"/lifts\">Logged lifts</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import \"./SelectLift.scss\";\nimport { useState } from \"react\";\n\nconst SelectLift = ({ liftsArr, handleLiftSelect }) => {\n  const [value, setValue] = useState(null);\n\n  const getLiftRadio = liftsArr.map((lift, i) => {\n    return (\n      <div className=\"radio\">\n        <input\n          type=\"radio\"\n          id={lift + i}\n          className=\"radio__input\"\n          name=\"lift\"\n          value={lift}\n          onClick={handleLiftSelect}\n        />\n        <label className = \"radio__label\" for={lift}>{lift}</label>\n      </div>\n    );\n  });\n  return (\n    <div className=\"lift\">\n      <h4 className=\"lift__title\">Lift Type</h4>\n      <div className=\"lift__list\">{getLiftRadio}</div>\n    </div>\n  );\n};\n\nexport default SelectLift;\n","import \"./WeightInput.scss\";\nimport { useState } from \"react\";\n\nconst WeightInput = ({ handleWeightInput }) => {\n  const [weight, setWeight] = useState();\n\n  return (\n    <div className=\"weightcontainer\">\n      <h4 className=\"weight__title\">How much did you lift?</h4>\n      <div className=\"weight__input\">\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Enter the weight you lifted here\"\n          value={weight}\n          onChange={handleWeightInput}\n        />\n        <h5 className=\"input__kgs\">KGs</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default WeightInput;\n","export default __webpack_public_path__ + \"static/media/lifticon-03.348b1eaf.svg\";","export default __webpack_public_path__ + \"static/media/lifticon-01.dff8a8d3.svg\";","export default __webpack_public_path__ + \"static/media/lifticon-04.5b2fe03a.svg\";","export default __webpack_public_path__ + \"static/media/lifticon-02.dc3412cf.svg\";","export default __webpack_public_path__ + \"static/media/lifticon-05.837ea383.svg\";","import squat from \"../assets/images/icons/lifticon-03.svg\";\nimport overHeadPress from \"../assets/images/icons/lifticon-01.svg\";\nimport benchPress from \"../assets/images/icons/lifticon-04.svg\";\nimport bentOverRow from \"../assets/images/icons/lifticon-02.svg\";\nimport deadlift from \"../assets/images/icons/lifticon-05.svg\";\n\nexport const showDifficulty = (difficulty) => {\n  const toInteger = parseInt(difficulty);\n  if (isNaN(toInteger)) {\n    return undefined;\n  }\n  if (toInteger >= 90) {\n    return \"very hard\";\n  } else if (toInteger < 90 && toInteger >= 60) {\n    return \"hard\";\n  } else if (toInteger < 60 && toInteger >= 30) {\n    return \"moderate\";\n  } else if (toInteger < 30 && toInteger > 10) {\n    return \"easy\";\n  }\n  return \"very easy\";\n};\n\nexport const getImage = (liftType) => {\n  const lift = liftType.toLowerCase();\n  if (lift === \"squat\") {\n    return squat;\n  } else if (lift === \"overhead press\") {\n    return overHeadPress;\n  } else if (lift === \"bench press\") {\n    return benchPress;\n  } else if (lift === \"bent-over row\") {\n    return bentOverRow;\n  }\n  return deadlift;\n};\n","import { useEffect, useState } from \"react\";\nimport { showDifficulty } from \"../../utils/string-helpers\";\nimport \"./Slider.scss\";\nconst Slider = ({\n  eventHandle,\n  className,\n  bottomTitle,\n  topTitle,\n  diffculty,\n}) => {\n  const [newLevel, setLevel] = useState(\"moderate\");\n\n  const handInputUpdateComponentState = (e) => {\n    const currentDifficulty = e.target.value;\n    eventHandle(currentDifficulty);\n    const getNewLevel = showDifficulty(currentDifficulty);\n    setLevel(getNewLevel);\n  };\n\n  useEffect(() => {\n    console.log(newLevel);\n    const sliderDOM = document.querySelector(\".slider\");\n    if (newLevel === \"very easy\") {\n      sliderDOM.classList.add(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--easy\");\n      sliderDOM.classList.remove(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--very-hard\");\n    } else if (newLevel === \"easy\") {\n      sliderDOM.classList.add(\"slider--easy\");\n      sliderDOM.classList.remove(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--very-hard\");\n    } else if (newLevel === \"moderate\") {\n      sliderDOM.classList.add(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--easy\");\n      sliderDOM.classList.remove(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--very-hard\");\n    } else if (newLevel === \"hard\") {\n      sliderDOM.classList.add(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--easy\");\n      sliderDOM.classList.remove(\"slider--very-hard\");\n    } else if (newLevel === \"very hard\") {\n      sliderDOM.classList.add(\"slider--very-hard\");\n      sliderDOM.classList.remove(\"slider--moderate\");\n      sliderDOM.classList.remove(\"slider--very-easy\");\n      sliderDOM.classList.remove(\"slider--hard\");\n      sliderDOM.classList.remove(\"slider--easy\");\n    }\n  }, [newLevel]);\n\n  return (\n    <>\n      <div class=\"slider-labels\">\n        <p class=\"slider-label\">{bottomTitle}</p>\n        <p class=\"slider-label\">{topTitle}</p>\n      </div>\n      <input\n        className={`slider ${className}`}\n        value={diffculty}\n        type=\"range\"\n        min=\"1\"\n        max=\"100\"\n        onChange={handInputUpdateComponentState}\n      />\n      <p>{newLevel}</p>\n    </>\n  );\n};\n\nexport default Slider;\n","import \"./LevelSlider.scss\";\nimport { useState, useEffect } from \"react\";\nimport Slider from \"../Slider/Slider\";\nimport { showDifficulty } from \"../../utils/string-helpers\";\n\nconst LevelSlider = ({ handleDifficultyInput }) => {\n  const [difficulty, setDifficulty] = useState(\"\");\n\n  const handleInput = (e) => {\n    setDifficulty(e);\n    handleDifficultyInput(e);\n  };\n\n  return (\n    <div>\n      <Slider\n        className=\"input slider__input\"\n        bottomTitle=\"Very easy\"\n        topTitle=\"Very hard\"\n        difficulty={difficulty}\n        eventHandle={handleInput}\n      />\n    </div>\n  );\n};\n\nexport default LevelSlider;\n","import \"./Button.scss\";\n\nconst Button = ({ title, handleClick }) => {\n  return (\n    <>\n      {/* <button className=\"btn\" onClick ={handleClick}>{text}</button> */}\n      <input type=\"reset\" className=\"btn\" value={title} onClick={handleClick} />\n    </>\n  );\n};\n\nexport default Button;\n","import SelectLift from \"../../components/SelectLift/SelectLift\";\nimport WeightInput from \"../../components/WeightInput/WeightInput\";\nimport LevelSlider from \"../../components/LevelSlider/LevelSlider\";\nimport Button from \"../../components/Button/Button\";\nimport \"./LiftForm.scss\";\n\nconst LiftForm = ({\n  handleLiftSelect,\n  handleWeightInput,\n  handleDifficultyInput,\n  handleClick,\n}) => {\n  const liftsArr = [\n    \"Deadlift\",\n    \"Squat\",\n    \"Overhead press\",\n    \"Bent-over row\",\n    \"Bench press\",\n  ];\n\n  //Get rid of main title\n  return (\n    <form className=\"form\">\n      <h3 className=\"title\">Record Lift</h3>\n      <SelectLift liftsArr={liftsArr} handleLiftSelect={handleLiftSelect} />\n      <WeightInput handleWeightInput={handleWeightInput} />\n      <div class=\"difficulty\">\n        <h4 className=\"difficulty__title\">How did it feel?</h4>\n        <LevelSlider handleDifficultyInput={handleDifficultyInput} />\n      </div>\n      <Button type=\"reset\" handleClick={handleClick} title={\"Add next lift\"} />\n    </form>\n  );\n};\n\nexport default LiftForm;\n","import \"./Card.scss\";\nconst Card = ({ liftType, weight, difficulty, level, date, img }) => {\n  return (\n    <>\n      <div className=\"card\">\n        <h4 className=\"card__title\">{liftType}</h4>\n        <img src={img} className=\"card__image\"></img>\n        <div className=\"card__text\">\n          <p className=\"card__info\">Weight:</p>\n          <p className=\"card__info\">{weight}kgs</p>\n          <p className=\"card__info\">Exertion:</p>\n          <p className=\"card__info\">\n            {level.charAt(0).toUpperCase() + level.slice(1)} ({difficulty})%\n          </p>\n          <p className=\"card__info\">Completed:</p>\n          <p className=\"card__info\">{date}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import LevelSlider from \"../LevelSlider/LevelSlider\";\nimport \"./FilterItems.scss\";\nconst FilterItems = ({ selectItems, labelCopy, className, eventHandler }) => {\n  return (\n    <>\n      <div className={`${{ className }} filter`}>\n        <label htmlFor={`${className}__label filter__select`}>\n          {labelCopy}\n        </label>\n        <select\n          name={className}\n          className={`${className}__select`}\n          id=\"lift\"\n          onChange={eventHandler}\n        >\n          <option selected value=\"Select\">\n            Select\n          </option>\n          {selectItems}\n        </select>\n      </div>\n    </>\n  );\n};\n\nexport default FilterItems;\n","import { useState } from \"react\";\nimport FilterItems from \"../../components/FilterItems/FilterItems\";\nimport Slider from \"../../components/Slider/Slider\";\nimport \"./FilterContainer.scss\";\n\nconst FilterContainer = ({\n  handleDifficultySelect,\n  handleSelectLift,\n  handleWeightSelect,\n  filtersJSX,\n  weightRangeJSX,\n}) => {\n  return (\n    <>\n      <div className=\"filters\" selectOptions={filtersJSX}>\n        <FilterItems\n          className=\"lift-filter\"\n          selectItems={filtersJSX}\n          eventHandler={handleSelectLift}\n          labelCopy=\"Select lift type\"\n        />\n        <FilterItems\n          className=\"weight-filter\"\n          selectItems={weightRangeJSX}\n          eventHandler={handleWeightSelect}\n          labelCopy=\"Select weight range\"\n        />\n        <div className=\"difficulty-container\">\n          <Slider\n            className=\"difficulty-filter\"\n            bottomTitle=\"easy\"\n            topTitle=\"hard\"\n            eventHandle={handleDifficultySelect}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FilterContainer;\n","export const findWeightRange = (input) => {\n  const toInteger = parseInt(input);\n  if (toInteger > 180) {\n    return \">180\";\n  } else if (toInteger > 161 && toInteger <= 180) {\n    return \"161-180\";\n  } else if (toInteger > 121 && toInteger <= 140) {\n    return \"121-140\";\n  } else if (toInteger > 101 && toInteger <= 120) {\n    return \"121-140\";\n  } else if (toInteger > 81 && toInteger <= 100) {\n    return \"81-100\";\n  } else if (toInteger > 61 && toInteger <= 80) {\n    return \"61-80\";\n  } else if (toInteger > 41 && toInteger <= 60) {\n    return \"41-60\";\n  } else if (toInteger > 21 && toInteger <= 40) {\n    return \"21-40\";\n  } else if (toInteger < 21 && toInteger <= 40) {\n    return \"0-20\";\n  }\n};\n\nexport const checkIfLiftSelect = (arr, item) => {\n  const currentCheck = arr.find((element) => element.item);\n  const indexValue = arr.indexOf(currentCheck);\n  if (indexValue > -1) {\n    return indexValue;\n  } else {\n    return false;\n  }\n};\n\nexport const checkIsDefaultFilter = (curr, def) => {\n  if (!(Array.isArray(curr) && Array.isArray(def))) {\n    throw new Error(\"No valid array provided\");\n  }\n  // Check if the current filter is the default\n  const isDefault = curr.every((item, index) => {\n    const keyValues = Object.keys(item);\n    const isMatch = keyValues.every((key) => item[key] === def[index][key]);\n    if (isMatch) {\n      //return true if the two arrays are the same\n      return true;\n    }\n  });\n  return isDefault;\n};\n\nexport const changeAllFilters = (array, key, value) => {\n  const newArr = array.map((item) => {\n    item[key] = value;\n    return item;\n  });\n  return newArr;\n};\n","import { useState } from \"react/cjs/react.development\";\nimport \"./LiftListContainer.scss\";\nimport Card from \"../../components/Card/Card\";\nimport FilterContainer from \"../FilterContainer/FilterContainer\";\nimport { showDifficulty, getImage } from \"../../utils/string-helpers\";\nimport { useEffect } from \"react\";\nimport {\n  checkIsDefaultFilter,\n  findWeightRange,\n  checkIfLiftSelect,\n  changeAllFilters,\n} from \"../../utils/filter-helpers\";\n\nconst LiftListContainer = ({ allLiftsLogged }) => {\n  const filterDefault = [\n    {\n      liftType: \"Deadlift\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n    {\n      liftType: \"Squat\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n    {\n      liftType: \"Overhead press\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n    {\n      liftType: \"Bent-over row\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n    {\n      liftType: \"Bench press\",\n      isChecked: false,\n      weight: \"\",\n      difficulty: \"\",\n      level: \"\",\n    },\n  ];\n  const weightRange = [\n    \"0-20\",\n    \"21-40\",\n    \"41-60\",\n    \"61-80\",\n    \"81-100\",\n    \"101-120\",\n    \"121-140\",\n    \"161-180\",\n    \">180\",\n  ];\n\n  // Set state for lifts to show and filters\n  const [liftsToShow, updateLiftsToShow] = useState(allLiftsLogged);\n  const [currentFilter, setFilter] = useState(filterDefault);\n\n  // Handle filter selectfunction\n  //Type of lift fliter\n  const handleSelectLift = (e) => {\n    const weightSelect = e.target.value;\n    if (weightSelect === \"Select\") {\n      const updateFilter = changeAllFilters(currentFilter, \"isChecked\", false);\n      setFilter(updateFilter);\n      return console.log(currentFilter);\n    }\n    const indexValue = currentFilter.findIndex(\n      (obj) => obj.liftType === weightSelect\n    );\n    const updateFilter = [...filterDefault];\n    updateFilter[indexValue].isChecked = true;\n    console.log(updateFilter);\n    setFilter(updateFilter);\n  };\n  //Weight range filter\n  const handleWeightSelect = (e) => {\n    const weightInput = e.target.value;\n    if (weightInput === \"Select\") {\n      const updateFilter = changeAllFilters(currentFilter, \"weight\", \"\");\n      setFilter(updateFilter);\n      return console.log(currentFilter);\n    }\n    const indexValue = checkIfLiftSelect(currentFilter, weightInput);\n    if (indexValue) {\n      const updateFilter = [...currentFilter];\n      updateFilter[indexValue].weight = weightInput;\n      console.log(updateFilter);\n      return setFilter(updateFilter);\n    } else {\n      const updateFilter = changeAllFilters(\n        currentFilter,\n        \"weight\",\n        weightInput\n      );\n      setFilter(updateFilter);\n      return console.log(currentFilter);\n    }\n  };\n\n  //Difficulty slider\n  const handleDifficultySelect = (e) => {\n    const difficultyInput = e;\n    const indexValue = checkIfLiftSelect(currentFilter, difficultyInput);\n    if (indexValue) {\n      const updateFilter = [...currentFilter];\n      updateFilter[indexValue].difficulty = difficultyInput;\n      updateFilter[indexValue].level = showDifficulty(e);\n      setFilter(updateFilter);\n      console.log(currentFilter);\n    } else {\n      const updateFilter = currentFilter.map((item) => {\n        item.difficulty = difficultyInput;\n        item.level = showDifficulty(difficultyInput);\n        return item;\n      });\n      setFilter(updateFilter);\n      console.log(currentFilter);\n    }\n  };\n\n  useEffect(() => {\n    const isDefault = checkIsDefaultFilter(currentFilter, filterDefault);\n    //Guard to reset the filters if none selected\n    if (isDefault) {\n      console.log(currentFilter);\n      return updateLiftsToShow(allLiftsLogged);\n    }\n    //Copy all the lifts currently shown\n    let newLiftsToShow = [...allLiftsLogged];\n    let currentLift = currentFilter.find((obj) => obj.isChecked);\n    if (currentLift) {\n      newLiftsToShow = allLiftsLogged.filter(\n        (item) => item.liftType === currentLift.liftType\n      );\n    }\n    //Find if weight input\n    let currentWeight = currentFilter.find((obj) => obj.weight);\n    if (currentWeight) {\n      newLiftsToShow = newLiftsToShow.filter((item) => {\n        const weightRange = findWeightRange(item.weight);\n        if (weightRange === currentWeight.weight) {\n          return true;\n        }\n      });\n      console.log(newLiftsToShow);\n    }\n    //Fid if difficulty input\n    let currentDifficulty = currentFilter.find((obj) => obj.level);\n    if (currentDifficulty) {\n      //Filter from the original total lifts array to set back to new search each time\n      newLiftsToShow = newLiftsToShow.filter(\n        (item) => item.level === currentDifficulty.level\n      );\n    }\n    return updateLiftsToShow(newLiftsToShow);\n  }, [currentFilter]);\n\n  //Functions to return JSX\n  const allLiftsLoggedJSX = liftsToShow.map((lift) => {\n    const imageURL = getImage(lift.liftType);\n    return (\n      <>\n        <Card\n          liftType={lift.liftType}\n          weight={lift.weight}\n          difficulty={lift.difficulty}\n          date={lift.date}\n          level={lift.level}\n          img={imageURL}\n        />\n      </>\n    );\n  });\n  const filtersJSX = filterDefault.map((filterItem, i) => {\n    return (\n      <option\n        id={i}\n        className=\"lift-filter__option\"\n        value={`${filterItem.liftType}`}\n      >\n        {filterItem.liftType}\n      </option>\n    );\n  });\n  const weightRangeJSX = weightRange.map((weightRangeItem, i) => {\n    return (\n      <option\n        id={i}\n        className=\"weight-filter__option\"\n        value={`${weightRangeItem}`}\n      >\n        {weightRangeItem} KGs\n      </option>\n    );\n  });\n\n  return (\n    <>\n      <FilterContainer\n        handleDifficultySelect={handleDifficultySelect}\n        handleSelectLift={handleSelectLift}\n        handleWeightSelect={handleWeightSelect}\n        filtersJSX={filtersJSX}\n        weightRangeJSX={weightRangeJSX}\n      />\n      <div className=\"card-container\">{allLiftsLoggedJSX}</div>\n    </>\n  );\n};\nexport default LiftListContainer;\n","import LiftForm from \"../../containers/LifForm/LiftForm\";\nimport LiftListContainer from \"../../containers/LiftListContainer/LiftListContainer\";\nimport { Routes, Route } from \"react-router-dom\";\n\nconst Routing = ({handleLiftSelect, handleWeightInput, handleDifficultyInput, handleClick, allLiftsLogged}) => {\n    return (\n        <Routes>\n        <Route\n          path=\"/lift/create\"\n          element={\n            <LiftForm\n                handleLiftSelect={handleLiftSelect}\n                handleWeightInput={handleWeightInput}\n                handleDifficultyInput={handleDifficultyInput}\n                handleClick={handleClick}\n            />\n        }\n        />\n        <Route\n          path= \"/lifts\"\n          element={<LiftListContainer allLiftsLogged={allLiftsLogged} />}\n        />\n      </Routes> \n    );\n}\n \nexport default Routing;","import { useState, useEffect } from \"react\";\nimport Nav from \"../Nav/Nav\";\nimport Routing from \"../Routes.jsx/Routing\";\n\nimport { showDifficulty } from \"../../utils/string-helpers\";\n\nconst Home = () => {\n  const [currentLift, setCurrentLift] = useState({});\n  const [allLiftsLogged, setAllLoggedLifts] = useState([]);\n\n  const handleLiftSelect = (e) => {\n    // console.log(e)\n    const currentLift = e.target.value;\n    const currentDate = new Date().toLocaleString().split(\",\")[0];\n    let newLift = {\n      liftType: currentLift,\n      weight: 0,\n      difficulty: 0,\n      date: currentDate,\n    };\n    setCurrentLift(newLift);\n  };\n\n  const handleWeightInput = (e) => {\n    const kgInput = e.target.value;\n    const updatedLift = { ...currentLift };\n    parseFloat(updatedLift);\n    updatedLift.weight = kgInput;\n    setCurrentLift(updatedLift);\n  };\n\n  const handleDifficultyInput = (e) => {\n    const difficulty = e;\n    const updatedLift = { ...currentLift };\n    updatedLift.difficulty = difficulty;\n    updatedLift.level = showDifficulty(difficulty);\n    setCurrentLift(updatedLift);\n  };\n\n  const handleClick = (e) => {\n    const updatedLift = { ...currentLift };\n    const updateLiftsLogged = [...allLiftsLogged];\n    updateLiftsLogged.push(updatedLift);\n    setAllLoggedLifts(updateLiftsLogged);\n  };\n\n  useEffect(() => {\n    console.log(allLiftsLogged);\n  }, [allLiftsLogged]);\n\n  ///Move routes to own component\n  return (\n    <>\n      <Nav />\n      <Routing \n        handleLiftSelect={handleLiftSelect}\n        handleWeightInput={handleWeightInput}\n        handleDifficultyInput={handleDifficultyInput}\n        handleClick={handleClick}\n        allLiftsLogged = {allLiftsLogged}/>\n    </>\n  );\n};\n\nexport default Home;\n","import \"./App.scss\";\nimport Home from \"./components/Home/Home\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <main>\n        <Router>\n          <Home className=\"Home\" />\n        </Router>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}